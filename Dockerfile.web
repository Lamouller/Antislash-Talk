# üéôÔ∏è Antislash Talk Web Application - Production Build
# Multi-stage build for optimized image size

# Stage 1: Build
FROM node:22-alpine AS builder

WORKDIR /app

# Install pnpm
RUN npm install -g pnpm@8.15.0

# Copy workspace files
COPY pnpm-workspace.yaml package.json turbo.json ./

# Copy all packages
COPY packages ./packages
COPY apps/web ./apps/web

# Install dependencies
RUN pnpm install --no-frozen-lockfile

# Build the web application
WORKDIR /app/apps/web

# Accept build arguments for Vite
ARG VITE_SUPABASE_URL
ARG VITE_SUPABASE_ANON_KEY
ARG VITE_HIDE_MARKETING_PAGES
ARG VITE_OLLAMA_URL

# Set as environment variables for build
ENV VITE_SUPABASE_URL=$VITE_SUPABASE_URL
ENV VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY
ENV VITE_HIDE_MARKETING_PAGES=$VITE_HIDE_MARKETING_PAGES
ENV VITE_OLLAMA_URL=$VITE_OLLAMA_URL

RUN pnpm build

# Stage 2: Production
FROM nginx:alpine

# Copy built files
COPY --from=builder /app/apps/web/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.web.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

