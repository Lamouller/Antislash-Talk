# üéôÔ∏è Talk-2-Web Docker Compose Configuration
# Complete deployment stack with all dependencies

version: '3.8'

services:
  # Main Talk-2-Web Application
  talk2web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: talk2web-app
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    networks:
      - talk2web-network
    depends_on:
      - supabase-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Supabase Database (Optional - for self-hosted setup)
  supabase-db:
    image: supabase/postgres:15.1.0.147
    container_name: talk2web-db
    restart: unless-stopped
    environment:
      POSTGRES_HOST: /var/run/postgresql
      PGPORT: 5432
      POSTGRES_PORT: 5432
      PGPASSWORD: your-secure-password
      POSTGRES_PASSWORD: your-secure-password
      PGDATABASE: postgres
      POSTGRES_DB: postgres
      PGUSER: supabase_admin
      POSTGRES_USER: supabase_admin
      JWT_SECRET: your-jwt-secret-at-least-32-characters-long
      JWT_EXP: 3600
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - talk2web-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supabase_admin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase Auth (Optional - for self-hosted setup)
  supabase-auth:
    image: supabase/gotrue:v2.143.0
    container_name: talk2web-auth
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: http://localhost:3000
      GOTRUE_URL: http://localhost:9999
      PORT: 9999
      GOTRUE_JWT_SECRET: your-jwt-secret-at-least-32-characters-long
      GOTRUE_JWT_EXP: 3600
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:your-secure-password@supabase-db:5432/postgres
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_URI_ALLOW_LIST: "*"
      GOTRUE_DISABLE_SIGNUP: false
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_EXTERNAL_EMAIL_ENABLED: true
      GOTRUE_MAILER_AUTOCONFIRM: true
      # SMTP Configuration (configure for production)
      GOTRUE_SMTP_HOST: smtp.gmail.com
      GOTRUE_SMTP_PORT: 587
      GOTRUE_SMTP_USER: your-email@gmail.com
      GOTRUE_SMTP_PASS: your-app-password
      GOTRUE_SMTP_ADMIN_EMAIL: admin@talk2web.com
      GOTRUE_MAILER_URLPATHS_INVITE: http://localhost:3000/auth/callback
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: http://localhost:3000/auth/callback
      GOTRUE_MAILER_URLPATHS_RECOVERY: http://localhost:3000/auth/reset
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: http://localhost:3000/auth/callback
    ports:
      - "9999:9999"
    networks:
      - talk2web-network
    depends_on:
      supabase-db:
        condition: service_healthy

  # Redis for caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: talk2web-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - talk2web-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Nginx Load Balancer (Optional - for multiple instances)
  nginx-lb:
    image: nginx:alpine
    container_name: talk2web-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-lb.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - talk2web-network
    depends_on:
      - talk2web
    profiles:
      - loadbalancer

  # Monitoring with Prometheus (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: talk2web-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - talk2web-network
    profiles:
      - monitoring

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: talk2web-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - talk2web-network
    profiles:
      - monitoring

networks:
  talk2web-network:
    driver: bridge

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local 